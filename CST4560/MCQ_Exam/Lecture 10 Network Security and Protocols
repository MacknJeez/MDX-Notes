TCP/IP and ICMP
Security issues with these protocols
Ping of Death, Smurf Attack
Browsers and HTTP

In the OSI layer (APSTNDP), TCP/IP is used for communication between the Transport/Network layers 

Application - access to network resources
Presentation - handle the data (translate, encrypt and compress)
Session - manage sessions between clients and servers 
Transport - process to process data transfer (within processes)
Network - move data (packets) from source to dest ACROSS SYSTEMS
Data Link - connection between hops that the packets take (between routers and stuff)
Physical - actual cabling used for data transfer


APSTNDP -> PDNTSPA 


TCP (Transmission Control Protocol) (SENDING BOOK PAGE BY PAGE)
  - break data into packets and reconstruct at receiver end
  - lost packets are resent 
  - connection/session maintained until delivery finished
  - flow control, sequential messages (sent in order)

IP (Internet Protocol) (best effort)
  - do as much as it can, doesn't resend anything 
  - connections made using packet header info (source, dest, size etc)

ICMP (Internet Control Message Protocol) (ping 8.8.8.8 to see if network is up basically)
  - basically used for logs and feedback 
  - echo, ping etc

UDP (User Datagram Protocol) (THROWING A BOOK OUT THE WINDOW, HOPE YOU CATCH IT)
  - connectionless (send, doesn't care if receive or not)
  - media streaming, broadcasts (not for emails because the email data has to be sent properly or else huge asseating)
  - no flow control 

HTTP (Hyper Text Transfer Protocol)
  - HTTPs' less secure older brother 
  - GET, POST, HEAD etc
  - honestly it's just website protocol, nothing more than that

Security Issues in TCP/IP 
  - eavesdropping
  - smurfs (type of DOS attack) (send 1mpbs to 100 hosts, pretending to be victim source, victim recieves 100 replies from hosts)
  - SYN flooding (send a bunch of Syns to server, it eats its ass)
  - TCP spoofing
  - DoS connection reset (guess the sequence number of packets and send reset packet to close link between client and server)


Types of TCP handshake 
  - Open (Syn, SynAck, Ack)
  - Close (Fin, Ack, Fin, Ack)

