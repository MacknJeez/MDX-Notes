Saeed's class, he's taking the class from teams call 

Pen testing methodology, pretty exciting topic 


In UAE, you need to do the pen testing twice and then submit a report 

Pen testing Exec Standard (PTES)
  - Global standard
  - To make sure the tests are done in the proper way
  - released BlackHat in 2011
  - Open license 
  - TO ENABLE BUSINESS TO SET A BASELINE FOR PEN TESTING STANDARDS AND GUIDELINE


PTES Methodologies:

  - 7 Major steps:
    - Pre-engagement (define scope)
      - what we are testing
      - time estimation
      - deadlines etc.
      - Scope meeting (With client), Scope creep(subtle deviation from original scope)
        - A simple questionnaire can help with defining the scope 
        - eg. how many websites, what networks can be tested, no of apps
        - usually specifies the IP ranges (helps the pen tester)
      - Communication (emergency contact list)
      - Client Incident Response team test kept in the dark as well
      - Challenges: Scope Creep, Legal compliance
      - Take permission from ISP as weel

    - Intel Gathering
      - To collect as much info as possible about the target
      - Helps the tester to identify all attack vectors and surfaces 
      - OSINT 
        - Passive (info on third party sites like insta etc), Semi-passive (search engine data, internet traffic, internal traffic and behavior, ONLY public available reources), Active (direct interaction, like scanning oper ports) info gathering
      - Ensure the domain being tested is within the scope (avoid scope creep)

      - Footprinting
        - whois lookup, RIPE, ARIN, Nominet
        - BGP looking glass
      - Active Footprinting
        - Ping sweep, port scanning, nmap, banner grabbing (getting OS info, app info etc)
        - SNMP sweeps, DNS info, SMTP Bounceback
        - Web app discovery, SQL Databases (misconfiguration of DB),  misconfigured wireless networks

    - Threat Modeling (how the attacker might approach)
      - Focuses on two elements (assets and threats)
      - tester INDENTIFIES most likely threat vector
      - General model
      - Business Asset model
      - Business xxxxx model --------------------------------- check 
      - Clear Idenificaation of location aof threat (internal v external)
      - Threat capability analysis
      - Motivation modeling (motivation of threat actor/community)
      - Compromise of comparable organizations

    - Vuln Analysis
      - Start looking for vulns on the systems and apps
      - Active testing (direct interaction with components of the test (Automated or manual)
      - Passive Testing (no interaction with components, ie. metadata and traffic analysis)
      - Attack trees (formal metghods for analyzing security, root = target, leaf = ways of achieving)
      - research (public and private) (public = commercial software, public guides)
      - eg. if you find client user's username and password in a public data base? 
          My answer - make sure any more passwords aren't on the public databases. 
                      Send out communication to employees regarding changing passwords, enable 2FA, Enable password changing rule (how often you have to change the passwords)
                      make sure unused sessions aren't being used/still logged in
          Class answer - stricter password policy, access/PAM control, MFA, Data Loss Prevention system, find out which system was compromised for the data 
    - Exploitation 
      - Must stay within rules of engagement (can't accidentally take down their network lol)
      - Most of the time the attack must remain undiscovered (unless testing incident response)
      - Social Engineering, Physical access 
      - If you get root access from low level account, you can't use that to take down the entire world but you must report how you did it (eg the same password example, you can't use the password anywhere unless consent provided)

    - Post Exploitation
      - After gaining access, analyze what you can do with the access
      - determine the value of compromised machines
      - value of the data on the machine 
      - Logs/data gathered must be destroyed after testing
      - Clear documentation to avoid being sued XD
      - Use client's policies on use of equipment 
      - Laws on audio/video capture 
      - Analyze the network, services on the host
      - Pillaging (RELEVANT INFO ONLY)
        - obtain info from target
        - system config info, user info
        - Data should identify the high value targets/assets
        - Exfiltration (extraction of data from compromised systems)
        - Cleanup is important (remove all backdoors, rootkits, accounts installed by tester)
        - Someone from client should make sure the tester actually does this (or else big bad) ----------------------------------------- V IMPORTANT ALWAYS DO 100% PLS

    - Reporting
      - All findings must be reported in clear documentation 
      - Executive summary, cummulation of all steps taken, possible ways to improve the situation and vulns (more business minded)
      - Intended audience is the in-charge, in charge of security program 
      - Explain the found vuln, the weaknesses (cuz that's not the same as the vulns), risks,
      - Give fixes
        - Strategic roadmap for the client
      - Technical Report (to the security team, the actual implementation team, IRT, SOC)
        - More technical report, has more details about each step, each vuln/risk/weakness
        - Detailed steps to take for each issue 
        - Describes the scope, info, attack path etc.


Open Source Security Testing Methodology Manual 3 
  - OSSTMM focuses on which items need to be tested, what to do before, during and after a security test, and how to measure the results







































